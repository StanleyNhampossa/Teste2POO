/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import controller.UsuarioController;
import model.CurrentUser;
import model.Usuario;

import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author Stanley
 */
public class TelaListar extends javax.swing.JFrame {

    /**
     * Creates new form TelaListar
     */
    private String operacao = "Listar";

    private final CurrentUser currentUser;

    public TelaListar(CurrentUser currentUser) {
        initComponents();
        setLocationRelativeTo(null);
        inicializarComportamentos();
        this.currentUser = currentUser;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnVoltar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbUsuarios = new javax.swing.JTable();
        txtPesquisar = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        tbUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Email", "Nome do usuário", "Biografia", "Data de Nascimento", "Contacto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbUsuariosMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tbUsuariosMouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(tbUsuarios);

        txtPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 547, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnVoltar, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(txtPesquisar))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        TelaMenuPrincipal telaMenuPrincipal = new TelaMenuPrincipal(this.currentUser);
        telaMenuPrincipal.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void tbUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbUsuariosMouseClicked
        if(evt.getClickCount() == 2){
            if(operacao.equals("Editar")){
                clickNoBotaoEditar();
            }
            if(operacao.equals("Eliminar")){
                clickNoBotaoEliminar();
            } 
        }
    }//GEN-LAST:event_tbUsuariosMouseClicked

    private void txtPesquisarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarKeyReleased
        pesquisa();
    }//GEN-LAST:event_txtPesquisarKeyReleased

    private void tbUsuariosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbUsuariosMouseEntered
        // TODO add your handling code here:
        
    }//GEN-LAST:event_tbUsuariosMouseEntered

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnVoltar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbUsuarios;
    private javax.swing.JTextField txtPesquisar;
    // End of variables declaration//GEN-END:variables

    public void setOperacao(String operacao) {
        this.operacao = operacao;
    }

    private void preencherDadosNaTabela(){
        ArrayList<Usuario> usuarios = new ArrayList<>();
        usuarios = new UsuarioController().listarTodos();
        DefaultTableModel modelo = (DefaultTableModel) tbUsuarios.getModel();
        modelo.setRowCount(0);
        for(Usuario usuario : usuarios){
            modelo.addRow(
                    new Object[]{
                            usuario.getId(),
                            usuario.getNome(),
                            usuario.getEmail(),
                            usuario.getNomeUsuario(),
                            usuario.getBiografia(),
                            usuario.getDataDeNascimento(),
                            usuario.getContacto()
                    }
            );
        }
        tbUsuarios.setModel(modelo);
    }

    private void clickNoBotaoEditar(){
        int id = (Integer) tbUsuarios.getModel().getValueAt(tbUsuarios.getSelectedRow(), 0);
        String nome = (String) tbUsuarios.getModel().getValueAt(tbUsuarios.getSelectedRow(), 1);
        String email = (String) tbUsuarios.getModel().getValueAt(tbUsuarios.getSelectedRow(), 2);
        String nomeUsuario = (String) tbUsuarios.getModel().getValueAt(tbUsuarios.getSelectedRow(), 3);
        String biografia = (String) tbUsuarios.getModel().getValueAt(tbUsuarios.getSelectedRow(), 4);
        Date data = (Date) tbUsuarios.getModel().getValueAt(tbUsuarios.getSelectedRow(), 5);
        long contacto = (Long) tbUsuarios.getModel().getValueAt(tbUsuarios.getSelectedRow(), 6);
        TelaRegistarUsuario telaRegistarUsuario = new TelaRegistarUsuario(this.currentUser);
        telaRegistarUsuario.preencherCampos(id, nome, email, nomeUsuario,
                biografia, data, contacto, operacao);
        this.dispose();
    }

    private void clickNoBotaoEliminar(){
        int id = (Integer) tbUsuarios.getModel().getValueAt(tbUsuarios.getSelectedRow(), 0);
        boolean sucesso = new UsuarioController().deletarUsuario(id);
        if(sucesso) JOptionPane.showMessageDialog(null, "Usuário eliminado com sucesso");
        else JOptionPane.showMessageDialog(null, "Erro ao eliminar");
        preencherDadosNaTabela();
    }

    private void pesquisa(){
        if(txtPesquisar.getText().isEmpty()){
            preencherDadosNaTabela();
        }else{
            ArrayList<Usuario> usuarios = new ArrayList<>();
            usuarios = new UsuarioController().pesquisar(txtPesquisar.getText());
            DefaultTableModel modelo = (DefaultTableModel) tbUsuarios.getModel();
            modelo.setRowCount(0);
            for(Usuario usuario : usuarios){
                modelo.addRow(
                        new Object[]{
                                usuario.getId(),
                                usuario.getNome(),
                                usuario.getEmail(),
                                usuario.getNomeUsuario(),
                                usuario.getBiografia(),
                                usuario.getDataDeNascimento(),
                                usuario.getContacto()
                        }
                );
            }
            tbUsuarios.setModel(modelo);
        }
    }

    private void inicializarComportamentos(){
        preencherDadosNaTabela();
        TextPrompt textPrompt = new TextPrompt("Pesquisar", txtPesquisar);
    }

}
